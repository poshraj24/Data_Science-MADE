pipeline GoodsDataPipeline{
    //fetching data from the source
  block GoodsDataExtractor oftype HttpExtractor{	
        	url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";

    }
   block GoodsDataTextFileInterpreter oftype TextFileInterpreter{
    // applying encoding to the file 
    encoding: "latin6"; }
    //ignoring metadata
    block GoodsMetaDataRemover oftype TextRangeSelector{
        lineFrom: 8;
        lineTo: 41336;
    }
        
   //converting to csv
    block GoodsDataCSVFileInterpreter oftype CSVInterpreter{
        delimiter: ";";}
    
   
   // Deleting columns to keep only the specified ones (A-E, AT-AU)
    block GoodsColumnDeleter oftype ColumnDeleter {
        delete: [
            column F, column G, column H, column I, column J, column K, column L, column M,
            column N, column O, column P, column Q, column R, column S, column T, column U, column V, column W,
            column X, column Y, column Z, column AA, column AB, column AC, column AD, column AE, column AF,
            column AG, column AH, column AI, column AJ, column AK, column AL, column AM, column AN, column AO,
            column AP, column AQ, column AR, column AS
        ];
    }
    //converting data to table
    block GoodsDataTableInterpreter oftype TableInterpreter{
        header:false;
        columns: [
            "year" oftype positiveinteger,
            "month" oftype user_defined1,
            "goods_id" oftype user_defined2,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype positiveinteger,
            "total" oftype positiveinteger,
            

		];
    }

    transform capitalize{
    from inputName oftype text;
    to outputName oftype text;
    outputName: inputName replace /Januar/ with 'JANUAR'
    replace /Februar/ with 'FEBRUAR' 
    replace /März/ with 'MÄRZ' 
    replace /April/ with 'APRIL' 
    replace /Mai/ with 'MAI'
    replace /Juni/ with 'JUNI' 
    replace /Juli/ with 'JULI' 
    replace /August/ with 'AUGUST' 
    replace /September/ with 'SEPTEMBER' 
    replace /Oktober/ with 'OKTOBER' 
    replace /November/ with 'NOVEMBER' 
    replace /Dezember/ with 'DEZEMBER';
    }
   block GoodsDataMonthNameCapitalizer oftype TableTransformer{
    inputColumns: ['month'];
    outputColumn: 'month';
    use: capitalize;
   }
    block GoodsDataSQLiteInterpreter oftype SQLiteLoader {
		 table: "goods";
         file: "./goodsTransportedByTrain.sqlite";
	}
    // Data validation for other columns
    constraint PositiveRange oftype RangeConstraint { lowerBound: 0; lowerBoundInclusive: false;}
    valuetype positiveinteger oftype integer { constraints: [ PositiveRange ]; }
    constraint mahina oftype RegexConstraint{
        regex: /\b(Januar|Februar|März|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)\b/;
    }
    valuetype user_defined1 oftype text {
        constraints: [mahina];
    }
    constraint id oftype RegexConstraint {
        regex: /^NST7-[A-Z0-9]{3}/;
    }
    valuetype user_defined2 oftype text{
        constraints: [id];
    }
       

    //pipeline
    GoodsDataExtractor
    -> GoodsDataTextFileInterpreter
    -> GoodsMetaDataRemover
    -> GoodsDataCSVFileInterpreter
    -> GoodsColumnDeleter
    -> GoodsDataTableInterpreter
    -> GoodsDataMonthNameCapitalizer
    -> GoodsDataSQLiteInterpreter;


}
  



   
